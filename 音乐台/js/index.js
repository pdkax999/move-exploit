//初始化

(function (){

  let app = document.querySelector('#app')

  app.addEventListener('touchstart', function(e){

    e.preventDefault();

  })

  let links = document.querySelectorAll('a')

   links.forEach((item)=>{

     item.addEventListener("touchstart",function (){

        let href = item.getAttribute('href')

         location.href = href

     })


   })

  document.documentElement.style.fontSize = document.documentElement.clientWidth/10 + 'px';

  window.onresize = function (){


    document.documentElement.style.fontSize = document.documentElement.clientWidth/10 + 'px';

  }

})()


function header(){

  let menu = document.querySelector('.menu-open')

  let mask = document.querySelector('.mask')

  let app = document.querySelector('#app')

  let input = document.querySelector('.bottom-header>input')
  menu.addEventListener('touchstart',function () {

    menu.classList.toggle('checked')

    mask.classList.toggle('open')

  })

  input.addEventListener('touchstart',function (e) {

    this.focus()
     e.stopPropagation()
     input.style.backgroundColor = '#fff'
  })
  app.addEventListener('touchstart',function () {

    input.blur()

     input.style.backgroundColor = '#999'
  })


}


function nav(){

  let nav = document.querySelector('main> nav')

  let wrapper = nav.querySelector('.menu-list')

  let navItem = wrapper.querySelectorAll('li')

  let isMove = false;

  nav.addEventListener('touchstart',function(e){
    console.log('ul');
     wrapper.style.transition = 'none'

     this.startTimer = Date.now()

     this.x = e.targetTouches[0].clientX

     this.left = transformCSS(wrapper,'translateX')

  })
  nav.addEventListener('touchmove',function(e){

     this._x = e.targetTouches[0].clientX

    let  newLeft =  (this._x-this.x) + this.left
    let minLeft = nav.offsetWidth- wrapper.offsetWidth
    if(newLeft > 0){

      newLeft = newLeft * 0.5


   }

   if(newLeft < minLeft){

     newLeft = minLeft + (this._x-this.x)/2


   }
   isMove = true
    transformCSS(wrapper,'translateX',newLeft)
  })

  nav.addEventListener('touchend',function(e){

    this._x = e.changedTouches[0].clientX

    let disX = this._x -this.x

    this.endTimer = Date.now()

    let disT = this.endTimer - this.startTimer

    let  v = disX/disT

    let  distance = v*100

    let  Left =  (this._x-this.x) + this.left

    let  newLeft = Left + distance

    let minLeft = nav.offsetWidth- wrapper.offsetWidth

    wrapper.style.transition = 'all 0.3s ease-out'

    if(newLeft > 0){

       newLeft = 0

       wrapper.style.transition = 'all 0.3s cubic-bezier(0.08, 1.44, 0.6, 1.46)'
    }

    if(newLeft < minLeft){

      newLeft = minLeft

      wrapper.style.transition = 'all 0.3s cubic-bezier(0.08, 1.44, 0.6, 1.46)'
    }

    isMove = false
    transformCSS(wrapper,'translateX',newLeft)
  })


  navItem.forEach(function(item){


    item.addEventListener('touchend',function(e){

       if(isMove) return

      navItem.forEach(function(item1){

          item1.classList.remove('pitch')
      })

         this.classList.add('pitch')
   })

  })



}


function picture (){


  new Swiper("swiper-container")


}

function footer() {
   
  let  container1 =document.querySelector('#swiper-container1') 

  let  slide = document.querySelectorAll('#swiper-container1 .swiper-wrapper .swiper-slide')
  
  let  nav   = document.querySelector('.footer .nav')

  let  navItem = nav.querySelectorAll('div')
  
  let border = nav .querySelector('.border') 
   
  
  
    let swiprt=new Swiper(container1,{
        auto:false,
        loop:false,
        paginations:false,
        callback:{
          end (){
 
            let index = swiprt.getindex()
            
            let translateX = index * border.offsetWidth 
                       
            transformCSS(border,'translateX',translateX)
            

            let html = slide[0].innerHTML

             let key = slide[index].getAttribute('index')

             if(key === '0') return
             
              setTimeout(() => {
                
                slide[index].setAttribute('index','0')

                slide[index].innerHTML = html
                 
                 
              }, 2000);
              

          }
       }        
    })

    navItem.forEach(function (item,index) {

        item.key = index

      if(index === 4) return  
       
       item.addEventListener('touchstart',function (e) {
         
         let index = this.key
        
         let translateX = index * border.offsetWidth 

        transformCSS(border,'translateX',translateX)
          
        swiprt.node.switchSlide(index)

         let html = slide[0].innerHTML

         let key = slide[index].getAttribute('index')
          
          
          if(key === '0') return

          setTimeout(() => {
              
            slide[index].setAttribute('index','0')

            slide[index].innerHTML = html
                          
          }, 2000);
          
          
       })
      
    })
  


   
}






footer()
picture()
nav()
header()




